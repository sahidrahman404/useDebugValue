#+title: useDebugValue

#+begin_src tsx
// useDebugValue: useMedia

import { useDebugValue, useEffect, useState } from "react";
import "./App.css";

function useMedia(query: string, initialState = false) {
  const [state, setState] = useState(initialState);
  // 🐨 call useDebugValue here.
  // 💰 here's the formatted label I use: `\`${query}\` => ${state}`
  useDebugValue(`\`${query}\` => ${state}`);

  useEffect(() => {
    let mounted = true;
    const mql = window.matchMedia(query);
    function onChange() {
      if (!mounted) {
        return;
      }
      setState(mql.matches);
    }

    mql.addListener(onChange);
    setState(mql.matches);

    return () => {
      mounted = false;
      mql.removeListener(onChange);
    };
  }, [query]);

  return state;
}

function Box() {
  const isBig = useMedia("(min-width: 1000px)");
  const isMedium = useMedia("(max-width: 999px) and (min-width: 700px)");
  const isSmall = useMedia("(max-width: 699px)");
  const color = isBig
    ? "green"
    : isMedium
    ? "yellow"
    : isSmall
    ? "red"
    : undefined;

  return <div style={{ width: 200, height: 200, backgroundColor: color }} />;
}

function App() {
  return <Box />;
}

export default App;
#+end_src
